<?php

$message3 = getLast();

// drupal_set_message(t($message3), 'status');


function array_find_deep($array, $search, $keys = array()) {

  foreach($array as $key => $value) {
    if (is_array($value)) {
      $sub = array_find_deep($value, $search, array_merge($keys, array($key)));
      if (count($sub)) {
      return $sub;
      }
    } 
    elseif ($value === $search) { 
      return array_merge($keys, array($key));
    }
  }

  return array();
}

function getLast() {

  $pageAlias = drupal_get_path_alias();
  $pieces1 = explode("/", $pageAlias);
  $pieces2 = explode("-", $pieces1[1]);

  return ucfirst($pieces2[1]);
  //return "Waite";  

}

function getFirst() {

  $pageAlias = drupal_get_path_alias();
  $pieces1 = explode("/", $pageAlias);
  $pieces2 = explode("-", $pieces1[1]);

  return ucfirst($pieces2[0]);
  //return "Richard";

}

function grabTitles() {

  $pubListSrc = "sites/all/modules/custom/wri_external_pub_list/wriauthors.json";

  $pubList = file_get_contents($pubListSrc);

  $itemArray = json_decode($pubList, true);

  $b = $itemArray;

  $authLast = getLast();
  $authFirst = getFirst();
  $theVarLast = array_find_deep($b, $authLast);
  $theVarFirst = array_find_deep($b, $authFirst);

  if ($theVarLast[0] === $theVarFirst[0] && $theVarLast[1] === $theVarFirst[1] && $theVarLast[2] === $theVarFirst[2]) {
    $authMatch = 'yes';
  }
  else {
    $authMatch = 'nope';
  }

  //echo "<p>Are the names from the same element? = " . $authMatch . "</p>";

  $pubTitle = $theVarLast[0];

  //for debugging, set to True
  $forceMatchMessage = False;

  if ($authMatch == 'yes' && $b[$pubTitle]['title'] != '') {
    $blockContent = "<p>" . $authLast . ", " . $authFirst . ". \"" . $b[$pubTitle]['title'] . ".\" <em>" . $b[$pubTitle]['container-title'] . "</em> " . $b[$pubTitle]['volume'] . " (" . $b[$pubTitle]['issued']['date-parts'][0][0]  . "): " . $b[$pubTitle]['page'] . ". doi:" . $b[$pubTitle]['DOI'] . ".</p>";
  }
  elseif ($forceMatchMessage) {
    $blockContent = "<h1>no match: " . $authFirst . " " . $authLast . "</h1";
  }
  else {
    $blockContent = "<h1>no match: " . $authFirst . " " . $authLast . "</h1>
    <style>
      .pane-wri-external-pub-list-external-publications { display: none !important; }
      #content .nav--tabs .nav-item:last-child { display: none !important; }
    </style>
    ";
  }

  return $blockContent;

}

/** 
* Create the Drupal blocks. 
*/

/**
* Implements hook_block_info().
*/

function wri_external_pub_list_block_info() {
  $blocks = array();
  $blocks['external_publications'] = array(
    'info' => t('External Publications'),
    //'cache' => DRUPAL_CACHE_PER_ROLE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */

function wri_external_pub_list_block_view($delta = '') {
  $block = array();

  //$content = "external author test pub title";

  switch ($delta) {
    case 'external_publications':
      $block['subject'] = t('List of external publications for author pages');
      $block['title'] = t('External Publications');
      $block['content'] = grabTitles();
      break;
    }

  return $block;
}

